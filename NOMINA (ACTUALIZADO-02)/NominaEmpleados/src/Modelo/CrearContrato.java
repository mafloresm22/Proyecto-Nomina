/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Modelo;

import java.util.List;
import Modelo.Puesto;
import Modelo.ComboBoxItem;
import Modelo.ComboBoxItem;
import Modelo.ContratoDAO;
import Modelo.ContratoDAO;
import Modelo.HU02;
import Modelo.Puesto;
import Modelo.PuestoDAO;
import Modelo.PuestoDAO;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.Set;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class CrearContrato extends javax.swing.JFrame {

    PuestoDAO puestoDAO = new PuestoDAO();
    ContratoDAO contratoDAO = new ContratoDAO();
    int id;

    private int minimumRemuneration;

    /**
     * Creates new form EditarContrato
     */
    public CrearContrato(int idTrabajador) throws SQLException {
        id = idTrabajador;

        // Sin especificar el tipo, así puede aceptar cualquier objeto
        initComponents();
        listarPuestos();
        cb_duracion.setSelectedIndex(1);

    }

    void listarPuestos() throws SQLException {
        List<Puesto> lista = puestoDAO.listarPuestos();
        puestos_1.removeAllItems();  // Limpiar el ComboBox antes de agregar los elementos
        for (Puesto t : lista) {
            puestos_1.addItem(new ComboBoxItem(t.getIdPuesto(), t.getDescripPuesto())); // Añade ComboBoxItem
        }
    }

    private boolean isValidDate(String dateStr) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            sdf.setLenient(false);
            sdf.parse(dateStr);
            return true;
        } catch (ParseException e) {
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_expiracion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_remuneracion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cb_duracion = new javax.swing.JComboBox<>();
        cb_jubilacion = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txt_hijos = new javax.swing.JTextField();
        btnguardar = new javax.swing.JButton();
        botones2 = new javax.swing.JButton();
        puestos_1 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        botones1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Detalles  del Contrato");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel4.setText("Puesto");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        txt_expiracion.setText("2000-01-01");
        txt_expiracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_expiracionActionPerformed(evt);
            }
        });
        jPanel1.add(txt_expiracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 130, -1));

        jLabel5.setText("Remuneración");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, -1, -1));

        txt_remuneracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_remuneracionActionPerformed(evt);
            }
        });
        jPanel1.add(txt_remuneracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 130, -1));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, -1, -1));

        jLabel7.setText("Beneficios:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        jLabel8.setText("Escolaridad");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, -1, 20));

        jLabel9.setText("Expiración");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        jLabel10.setText("Duracion");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        cb_duracion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Indeterminado", "Temporada", "Proyecto" }));
        cb_duracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_duracionActionPerformed(evt);
            }
        });
        jPanel1.add(cb_duracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 120, -1));

        cb_jubilacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AFP", "ONP" }));
        cb_jubilacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_jubilacionActionPerformed(evt);
            }
        });
        jPanel1.add(cb_jubilacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 120, -1));

        jLabel11.setText("Fondo de jubilación");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, 20));

        txt_hijos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hijosActionPerformed(evt);
            }
        });
        jPanel1.add(txt_hijos, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, 120, -1));

        btnguardar.setText("Guardar");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnguardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, -1, -1));

        botones2.setText("Finalizar");
        botones2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botones2ActionPerformed(evt);
            }
        });
        jPanel1.add(botones2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 480, -1, -1));

        puestos_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puestos_1ActionPerformed(evt);
            }
        });
        jPanel1.add(puestos_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 120, -1));

        jLabel12.setText("Número de hijos");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, -1, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 530));

        botones1.setText("Regresar");
        botones1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botones1ActionPerformed(evt);
            }
        });
        getContentPane().add(botones1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/recursos humanos.jpeg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 180, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_duracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_duracionActionPerformed
        if (cb_duracion.getSelectedIndex() == 0) {
            LocalDate fechaActual = LocalDate.now();
            LocalDate fechaExpiracion = fechaActual.plusDays(1);
            txt_expiracion.setText(fechaExpiracion.toString());
            txt_expiracion.setEnabled(false);
        } else {
            if (txt_expiracion.getText().isBlank()) {
                txt_expiracion.setText("aaaa-mm-dd");
            }
            txt_expiracion.setEnabled(true);
        }
    }//GEN-LAST:event_cb_duracionActionPerformed

    private void cb_puestos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_puestosActionPerformed


    }//GEN-LAST:event_cb_puestosActionPerformed

    private void txt_remuneracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_remuneracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_remuneracionActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed

        try {
            // Validaciones de campos obligatorios
            if (puestos_1.getSelectedItem() == null
                    || cb_duracion.getSelectedItem() == null
                    || txt_expiracion.getText().trim().isEmpty()
                    || txt_remuneracion.getText().trim().isEmpty()
                    || cb_jubilacion.getSelectedItem() == null
                    || txt_hijos.getText().trim().isEmpty()) {

                JOptionPane.showMessageDialog(this,
                        "Todos los campos son obligatorios",
                        "Error de validación",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Obtener y validar valores
            ComboBoxItem selectedPuesto = (ComboBoxItem) puestos_1.getSelectedItem();
            int idPuesto = selectedPuesto.getId();  // Obtener ID del puesto
            String duracionContrato = (String) cb_duracion.getSelectedItem();  // Duración seleccionada

            // Validar fecha de expiración
            if (!isValidDate(txt_expiracion.getText())) {
                JOptionPane.showMessageDialog(this,
                        "El formato de fecha debe ser YYYY-MM-DD",
                        "Error de formato",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            java.util.Date expContrato = new SimpleDateFormat("yyyy-MM-dd").parse(txt_expiracion.getText());

            // Verificar que la fecha de expiración sea mayor a la fecha actual
            java.util.Date fechaActual = new java.util.Date();
            if (expContrato.compareTo(fechaActual) <= 0) {
                JOptionPane.showMessageDialog(this,
                        "La fecha de expiración debe ser mayor a la fecha actual",
                        "Error de validación",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Obtener la remuneración mínima para el puesto
            int remuneracionMinima = contratoDAO.obtenerRemuneracionMinima(idPuesto);

            // Validar remuneración
            if (!txt_remuneracion.getText().matches("\\d+")) {
                JOptionPane.showMessageDialog(this,
                        "La remuneración debe ser un número válido",
                        "Error de formato",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            int remuContrato = Integer.parseInt(txt_remuneracion.getText());  // Convertir remuneración a entero

            // Verificar que la remuneración no sea menor a la mínima
            if (remuContrato < remuneracionMinima) {
                JOptionPane.showMessageDialog(this,
                        "La remuneración no puede ser menor a la mínima para el puesto seleccionado",
                        "Error de validación",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            String jubiContrato = (String) cb_jubilacion.getSelectedItem();  // Jubilación seleccionada

            // Validar número de hijos
            if (!txt_hijos.getText().matches("\\d+")) {
                JOptionPane.showMessageDialog(this,
                        "El número de hijos debe ser un número válido",
                        "Error de formato",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            int numHijosContrato = Integer.parseInt(txt_hijos.getText());  // Número de hijos

            int idTrabajador = id;  // ID del trabajador recibido en el constructor

            // Llamar al método crear contrato en el DAO
            boolean contratoGuardado = contratoDAO.editarContratoPorTrabajador(
                    idTrabajador,
                    idPuesto,
                    duracionContrato,
                    expContrato,
                    remuContrato,
                    jubiContrato,
                    numHijosContrato
            );

            // Mostrar un mensaje dependiendo del resultado de la creación
            if (contratoGuardado) {
                JOptionPane.showMessageDialog(this, "Contrato guardado exitosamente.");
                dispose();
                HU02 objetoFormulario = new HU02();
                objetoFormulario.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar el contrato.");
            }

        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this,
                    "Error en el formato de fecha: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                    "Error al obtener la remuneración mínima: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Error: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnguardarActionPerformed

    private void botones2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botones2ActionPerformed

        HU02 objetoFormulario = new HU02();
        objetoFormulario.setVisible(true);
        dispose();
    }//GEN-LAST:event_botones2ActionPerformed

    private void botones1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botones1ActionPerformed
        // TODO add your handling code here:
        HU02 objetoFormulario = new HU02();
        objetoFormulario.setVisible(true);
        dispose();
    }//GEN-LAST:event_botones1ActionPerformed

    private void txt_hijosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hijosActionPerformed
        // TODO add your handling code here:
        if (txt_hijos.getText().isBlank()) {
            txt_hijos.setText("0");
        }
    }//GEN-LAST:event_txt_hijosActionPerformed

    private void cb_jubilacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_jubilacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_jubilacionActionPerformed

    private void txt_expiracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_expiracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_expiracionActionPerformed

    private void puestos_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puestos_1ActionPerformed
        ComboBoxItem selectedItem = (ComboBoxItem) puestos_1.getSelectedItem();
        if (selectedItem != null) {
            int idPuesto = selectedItem.getId();
            int remuneracion = puestoDAO.obtenerRemuneracion(idPuesto);
            minimumRemuneration = remuneracion; // Store as minimum remuneration
            txt_remuneracion.setText(remuneracion + "");  // Update text field with default remuneration
        }

    }//GEN-LAST:event_puestos_1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearContrato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearContrato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearContrato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearContrato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botones1;
    private javax.swing.JButton botones2;
    private javax.swing.JButton btnguardar;
    private javax.swing.JComboBox<String> cb_duracion;
    private javax.swing.JComboBox<String> cb_jubilacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<ComboBoxItem> puestos_1;
    private javax.swing.JTextField txt_expiracion;
    private javax.swing.JTextField txt_hijos;
    private javax.swing.JTextField txt_remuneracion;
    // End of variables declaration//GEN-END:variables
}
